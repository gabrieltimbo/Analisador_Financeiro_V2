# -*- coding: utf-8 -*-
"""Analisador Financeiro V2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KSwhMO_2MysN-c6GuPZgl3tWv3ysM63s
"""

# --- Analisador Financeiro Web Profissional ---
# Autor: Gabriel

import streamlit as st
import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages
import io
import datetime

# ==============================
# 0Ô∏è‚É£ Seguran√ßa: Login simples
# ==============================
st.title("üîí Analisador Financeiro de Clientes")

senha = st.text_input("Digite a senha para acessar o app", type="password")
if senha != "minhaSenhaSegura":  # Troque por uma senha segura
    st.warning("Senha incorreta! Acesso negado.")
    st.stop()

# ==============================
# 1Ô∏è‚É£ Fun√ß√µes de c√°lculo
# ==============================
def analise_financeira(contas_receber, ativo, passivo, dividas, lucro, caixa, prazo_faturamento):
    indicadores = {}
    indicadores['Endividamento (%)'] = round((dividas / ativo) * 100, 2) if ativo else 0
    indicadores['Liquidez Corrente'] = round((ativo / passivo), 2) if passivo else 0
    indicadores['Margem de Lucro (%)'] = round((lucro / ativo) * 100, 2) if ativo else 0
    indicadores['Cobertura de D√≠vida (%)'] = round((lucro / dividas) * 100, 2) if dividas else 0

    score = 0
    if indicadores['Endividamento (%)'] < 50: score += 2
    if indicadores['Liquidez Corrente'] > 1.2: score += 2
    if indicadores['Margem de Lucro (%)'] > 10: score += 2
    if indicadores['Cobertura de D√≠vida (%)'] > 150: score += 2
    if caixa > dividas * 0.5: score += 2

    if score >= 9:
        rating = "A"
    elif score >= 7:
        rating = "B"
    elif score >= 5:
        rating = "C"
    elif score >= 3:
        rating = "D"
    else:
        rating = "E"

    indicadores['Rating do Cliente'] = rating
    base_limite = (contas_receber / prazo_faturamento) * 30
    fator_rating = {"A":1.5, "B":1.3, "C":1.0, "D":0.7, "E":0.5}.get(rating, 1)
    fator_lucro = 1 + (lucro / ativo) if lucro >= 0 else 0.5
    limite_credito_ajustado = base_limite * fator_rating * fator_lucro
    indicadores['Limite de Cr√©dito (R$)'] = round(limite_credito_ajustado, 2)
    return indicadores

def recomendacoes(rating):
    rec = {
        "A": "Cliente saud√°vel para cr√©dito. Monitorar apenas fluxos futuros.",
        "B": "Cliente com bom hist√≥rico. Revisar condi√ß√µes de pagamento peri√≥dicas.",
        "C": "Risco moderado. Avaliar garantias e limites de cr√©dito.",
        "D": "Risco elevado. Exigir garantias adicionais e reduzir limites.",
        "E": "Alto risco. Evitar concess√£o de cr√©dito sem garantias s√≥lidas."
    }
    return rec.get(rating, "Sem recomenda√ß√£o")

# ==============================
# 2Ô∏è‚É£ Layout Web Interativo
# ==============================
st.subheader("üìå Informa√ß√µes do Cliente")

col1, col2 = st.columns(2)

with col1:
    nome_cliente = st.text_input("Nome do Cliente")
    data_analise = st.date_input("Data da An√°lise", datetime.date.today())
    contas_receber = st.number_input("Contas a Receber (R$)", min_value=0.0)
    ativo = st.number_input("Ativo Total (R$)", min_value=0.0)

with col2:
    passivo = st.number_input("Passivo Total (R$)", min_value=0.0)
    dividas = st.number_input("D√≠vidas (R$)", min_value=0.0)
    lucro = st.number_input("Lucro (R$)")
    caixa = st.number_input("Caixa dispon√≠vel (R$)")
    prazo_faturamento = st.number_input("Prazo m√©dio de faturamento (dias)", min_value=1)

# ==============================
# 3Ô∏è‚É£ Bot√£o de c√°lculo
# ==============================
if st.button("üí° Calcular An√°lise Financeira"):

    resultado = analise_financeira(contas_receber, ativo, passivo, dividas, lucro, caixa, prazo_faturamento)

    # ----- Cards de KPIs -----
    st.subheader("üìä KPIs Financeiros")
    kpis = {
        "Endividamento (%)": ("üî¥" if resultado['Endividamento (%)']>50 else "üü¢", resultado['Endividamento (%)']),
        "Liquidez Corrente": ("üü¢" if resultado['Liquidez Corrente']>1.2 else "üü†", resultado['Liquidez Corrente']),
        "Margem de Lucro (%)": ("üü¢" if resultado['Margem de Lucro (%)']>10 else "üü†", resultado['Margem de Lucro (%)']),
        "Cobertura de D√≠vida (%)": ("üü¢" if resultado['Cobertura de D√≠vida (%)']>150 else "üü†", resultado['Cobertura de D√≠vida (%)']),
        "Limite de Cr√©dito (R$)": ("üü¢", resultado['Limite de Cr√©dito (R$)'])
    }

    for k, (emoji, valor) in kpis.items():
        if "R$" in k:
            st.metric(label=f"{emoji} {k}", value=f"R$ {valor:,.2f}")
        else:
            st.metric(label=f"{emoji} {k}", value=f"{valor:.2f}")

    # ----- Badge de rating -----
    rating = resultado['Rating do Cliente']
    cores_rating = {"A":"green","B":"blue","C":"yellow","D":"orange","E":"red"}
    st.markdown(f"**‚≠ê Rating do Cliente:** <span style='color:{cores_rating[rating]}; font-size:20px'>{rating}</span>", unsafe_allow_html=True)

    # ----- Recomenda√ß√£o -----
    st.subheader("üìù Recomenda√ß√µes")
    st.info(recomendacoes(rating))

    # ----- Gr√°fico de KPIs -----
    st.subheader("üìà Gr√°fico de KPIs")
    kpis_labels = list(kpis.keys())
    kpis_valores = [v[1] for v in kpis.values()]
    fig, ax = plt.subplots()
    bars = ax.barh(kpis_labels, kpis_valores, color=['#FF5722','#4CAF50','#2196F3','#FFC107','#9C27B0'])
    for bar, valor, label in zip(bars, kpis_valores, kpis_labels):
        if '(%)' in label:
            ax.text(bar.get_width()+0.5, bar.get_y()+0.3, f"{valor:.2f}%")
        elif 'R$' in label:
            ax.text(bar.get_width()+0.5, bar.get_y()+0.3, f"R$ {valor:,.2f}")
        else:
            ax.text(bar.get_width()+0.5, bar.get_y()+0.3, f"{valor:,.2f}")
    st.pyplot(fig)

    # ----- Bot√£o de gerar PDF -----
    st.subheader("üìÑ Exportar PDF")
    if st.button("üíæ Gerar PDF"):
        pdf_buffer = io.BytesIO()
        with PdfPages(pdf_buffer) as pdf:
            # Capa
            plt.figure(figsize=(8,6))
            plt.axis('off')
            texto_capa = f"Relat√≥rio Financeiro do Cliente\n\nCliente: {nome_cliente}\nData da An√°lise: {data_analise}"
            plt.text(0.5,0.5,texto_capa, ha='center', va='center', fontsize=16)
            pdf.savefig()
            plt.close()

            # KPIs em gr√°fico
            plt.figure(figsize=(8,6))
            bars = plt.barh(kpis_labels, kpis_valores, color=['#FF5722','#4CAF50','#2196F3','#FFC107','#9C27B0'])
            for bar, valor, label in zip(bars, kpis_valores, kpis_labels):
                if '(%)' in label:
                    plt.text(bar.get_width()+0.5, bar.get_y()+0.3, f"{valor:.2f}%")
                elif 'R$' in label:
                    plt.text(bar.get_width()+0.5, bar.get_y()+0.3, f"R$ {valor:,.2f}")
                else:
                    plt.text(bar.get_width()+0.5, bar.get_y()+0.3, f"{valor:,.2f}")
            pdf.savefig()
            plt.close()
        pdf_buffer.seek(0)
        st.download_button(
            label="üì• Baixar PDF",
            data=pdf_buffer,
            file_name=f"Relatorio_{nome_cliente}.pdf",
            mime="application/pdf"
        )