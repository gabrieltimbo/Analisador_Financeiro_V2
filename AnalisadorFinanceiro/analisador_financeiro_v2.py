# -*- coding: utf-8 -*-
"""Analisador Financeiro V2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KSwhMO_2MysN-c6GuPZgl3tWv3ysM63s
"""

# -*- coding: utf-8 -*-
"""Analisador Financeiro V8 - Limite de Cr√©dito Profissional"""

import streamlit as st
import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages
import io
import datetime

# ==============================
# 0Ô∏è‚É£ Login simples
# ==============================
st.title("üîí Analisador Financeiro de Clientes")
senha = st.text_input("Digite a senha para acessar o app", type="password")
if senha != "minhaSenhaSegura":
    st.warning("Senha incorreta! Acesso negado.")
    st.stop()

# ==============================
# 1Ô∏è‚É£ Fun√ß√£o de an√°lise financeira
# ==============================
def analise_financeira(contas_receber, receita, ativo_circ, estoque, ativo_total,
                       passivo_circ, passivo_total, dividas, patrimonio, lucro, ebitda,
                       caixa, prazo_faturamento, perfil="NORMAL"):

    indicadores = {}

    # --- Liquidez ---
    indicadores['Liquidez Corrente'] = round((ativo_circ / passivo_circ) if passivo_circ else 0, 2)
    indicadores['Liquidez Seca'] = round(((ativo_circ - estoque) / passivo_circ) if passivo_circ else 0, 2)

    # --- Estrutura de Capital ---
    indicadores['Endividamento Total (%)'] = round((passivo_total / ativo_total) * 100 if ativo_total else 0, 2)
    indicadores['Composi√ß√£o do Endividamento (%)'] = round((passivo_circ / passivo_total) * 100 if passivo_total else 0, 2)

    # --- Rentabilidade ---
    indicadores['Margem L√≠quida (%)'] = round((lucro / receita) * 100 if receita else 0, 2)
    indicadores['EBITDA / Receita (%)'] = round((ebitda / receita) * 100 if receita else 0, 2)
    indicadores['ROE (%)'] = round((lucro / patrimonio) * 100 if patrimonio else 0, 2)

    # --- Score para Rating ---
    score = 0
    if indicadores['Endividamento Total (%)'] < 50: score += 2
    if indicadores['Liquidez Corrente'] > 1.2: score += 2
    if indicadores['Liquidez Seca'] > 1: score += 1
    if indicadores['Margem L√≠quida (%)'] > 10: score += 2
    if indicadores['EBITDA / Receita (%)'] > 15: score += 1
    if indicadores['ROE (%)'] > 10: score += 1

    # Rating
    if score >= 9:
        rating = "A"
    elif score >= 7:
        rating = "B"
    elif score >= 5:
        rating = "C"
    elif score >= 3:
        rating = "D"
    else:
        rating = "E"
    indicadores['Rating do Cliente'] = rating

    # --- Limite de cr√©dito estilo seguradora ---
    fatura_mensal = (contas_receber / prazo_faturamento) * 30  

    # Fator prazo: mais prazo ‚Üí limite maior
    fator_prazo = 1 + (min(prazo_faturamento / 60, 1))  # max 2x

    # Fator rating
    fator_rating = {"A":1.2, "B":1.0, "C":0.8, "D":0.5, "E":0.3}.get(rating,1)

    # Fator margem (at√© 15%)
    fator_margem = 1 + (min(indicadores['Margem L√≠quida (%)'], 15)/100)

    # Fator caixa: quanto mais caixa em rela√ß√£o √† d√≠vida, mais seguro
    fator_caixa = 0.5 + min(caixa / (dividas + 1e-6), 1)  # 0.5 a 1.5

    # Fator passivo circulante: muito endividado no curto prazo ‚Üí limite menor
    comp_passivo_circ = indicadores['Composi√ß√£o do Endividamento (%)'] / 100
    if comp_passivo_circ > 0.6:  # >60% no curto prazo
        fator_passivo = 0.7
    elif comp_passivo_circ > 0.4:  # 40-60%
        fator_passivo = 0.85
    else:
        fator_passivo = 1

    # Limite final
    limite_credito_ajustado = fatura_mensal * fator_prazo * fator_rating * fator_margem * fator_caixa * fator_passivo

    # Perfil pessimista
    if perfil.upper() == "PESSIMISTA":
        limite_credito_ajustado *= 0.7

    # Limite m√≠nimo se Rating E
    if rating == "E":
        limite_credito_ajustado = 1

    indicadores['Limite de Cr√©dito Sugerido (R$)'] = round(limite_credito_ajustado, 2)
    return indicadores

def recomendacoes(rating):
    rec = {
        "A": "Cliente saud√°vel para cr√©dito. Monitorar apenas fluxos futuros.",
        "B": "Cliente com bom hist√≥rico. Revisar condi√ß√µes de pagamento peri√≥dicas.",
        "C": "Risco moderado. Avaliar garantias e limites de cr√©dito.",
        "D": "Risco elevado. Exigir garantias adicionais e reduzir limites.",
        "E": "Alto risco. Evitar concess√£o de cr√©dito sem garantias s√≥lidas."
    }
    return rec.get(rating, "Sem recomenda√ß√£o")

# ==============================
# 2Ô∏è‚É£ Layout Interativo
# ==============================
st.subheader("üìå Informa√ß√µes do Cliente")
col1, col2 = st.columns(2)

with col1:
    nome_cliente = st.text_input("Nome do Cliente")
    data_analise = st.date_input("Data da An√°lise", datetime.date.today())
    contas_receber = st.number_input("Contas a Receber (R$)", min_value=0.0)
    ativo_circ = st.number_input("Ativo Circulante (R$)", min_value=0.0)
    estoque = st.number_input("Estoques (R$)", min_value=0.0)
    ativo_total = st.number_input("Ativo Total (R$)", min_value=0.0)
    receita = st.number_input("Receita L√≠quida (R$)", min_value=0.0)
    ebitda = st.number_input("EBITDA (R$)", min_value=0.0)
    caixa = st.number_input("Caixa Dispon√≠vel (R$)", min_value=0.0)

with col2:
    passivo_circ = st.number_input("Passivo Circulante (R$)", min_value=0.0)
    passivo_total = st.number_input("Passivo Total (R$)", min_value=0.0)
    dividas = st.number_input("D√≠vidas Totais (R$)", min_value=0.0)
    patrimonio = st.number_input("Patrim√¥nio L√≠quido (R$)", min_value=0.0)
    lucro = st.number_input("Lucro L√≠quido (R$)")
    prazo_faturamento = st.number_input("Prazo m√©dio de faturamento (dias)", min_value=1)

perfil = st.selectbox("PERFIL DE CR√âDITO", ["NORMAL", "PESSIMISTA"])

# ==============================
# 3Ô∏è‚É£ Bot√£o de c√°lculo
# ==============================
if st.button("üí° Calcular An√°lise Financeira"):
    resultado = analise_financeira(contas_receber, receita, ativo_circ, estoque, ativo_total,
                                   passivo_circ, passivo_total, dividas, patrimonio, lucro, ebitda,
                                   caixa, prazo_faturamento, perfil=perfil)

    # KPIs
    st.subheader("üìä KPIs Financeiros")
    kpis = {
        "Liquidez Corrente": ("üü¢" if resultado['Liquidez Corrente']>1.2 else "üü†", resultado['Liquidez Corrente']),
        "Liquidez Seca": ("üü¢" if resultado['Liquidez Seca']>1 else "üü†", resultado['Liquidez Seca']),
        "Endividamento Total (%)": ("üü¢" if resultado['Endividamento Total (%)']<50 else "üî¥", resultado['Endividamento Total (%)']),
        "Composi√ß√£o do Endividamento (%)": ("üü¢" if resultado['Composi√ß√£o do Endividamento (%)']<50 else "üü†", resultado['Composi√ß√£o do Endividamento (%)']),
        "Margem L√≠quida (%)": ("üü¢" if resultado['Margem L√≠quida (%)']>10 else "üü†", resultado['Margem L√≠quida (%)']),
        "EBITDA / Receita (%)": ("üü¢" if resultado['EBITDA / Receita (%)']>15 else "üü†", resultado['EBITDA / Receita (%)']),
        "ROE (%)": ("üü¢" if resultado['ROE (%)']>10 else "üü†", resultado['ROE (%)']),
        "Limite de Cr√©dito Sugerido (R$)": ("üü¢", resultado['Limite de Cr√©dito Sugerido (R$)'])
    }

    for k, (emoji, valor) in kpis.items():
        if "R$" in k:
            st.metric(label=f"{emoji} {k}", value=f"R$ {valor:,.2f}")
        else:
            st.metric(label=f"{emoji} {k}", value=f"{valor:.2f}")

    # Rating
    rating = resultado['Rating do Cliente']
    cores_rating = {"A":"green","B":"blue","C":"yellow","D":"orange","E":"red"}
    st.markdown(f"**‚≠ê Rating do Cliente:** <span style='color:{cores_rating[rating]}; font-size:20px'>{rating}</span>", unsafe_allow_html=True)

    # Recomenda√ß√µes
    st.subheader("üìù Recomenda√ß√µes")
    st.info(recomendacoes(rating))

    # Gr√°fico KPIs
    st.subheader("üìà Gr√°fico de KPIs")
    kpis_labels = list(kpis.keys())
    kpis_valores = [v[1] for v in kpis.values()]
    fig, ax = plt.subplots()
    bars = ax.barh(kpis_labels, kpis_valores, color=['#4CAF50','#2196F3','#FF5722','#FFC107','#FF9800','#9C27B0','#8E44AD','#00BCD4'])
    for bar, valor, label in zip(bars, kpis_valores, kpis_labels):
        if '(%)' in label:
            ax.text(bar.get_width()+0.5, bar.get_y()+0.3, f"{valor:.2f}%")
        elif 'R$' in label:
            ax.text(bar.get_width()+0.5, bar.get_y()+0.3, f"R$ {valor:,.2f}")
        else:
            ax.text(bar.get_width()+0.5, bar.get_y()+0.3, f"{valor:.2f}")
    st.pyplot(fig)

    # PDF
    st.subheader("üìÑ Exportar PDF")
    pdf_buffer = io.BytesIO()
    with PdfPages(pdf_buffer) as pdf:
        plt.figure(figsize=(8,6))
        plt.axis('off')
        plt.text(0.5,0.5,f"Relat√≥rio Financeiro do Cliente\n\nCliente: {nome_cliente}\nData: {data_analise}",
                 ha='center', va='center', fontsize=16)
        pdf.savefig()
        plt.close()

        plt.figure(figsize=(8,6))
        bars = plt.barh(kpis_labels, kpis_valores, color=['#4CAF50','#2196F3','#FF5722','#FFC107','#FF9800','#9C27B0','#8E44AD','#00BCD4'])
        for bar, valor, label in zip(bars, kpis_valores, kpis_labels):
            if '(%)' in label:
                plt.text(bar.get_width()+0.5, bar.get_y()+0.3, f"{valor:.2f}%")
            elif 'R$' in label:
                plt.text(bar.get_width()+0.5, bar.get_y()+0.3, f"R$ {valor:,.2f}")
            else:
                plt.text(bar.get_width()+0.5, bar.get_y()+0.3, f"{valor:.2f}")
        plt.title("üìä KPIs Financeiros")
        pdf.savefig()
        plt.close()

        plt.figure(figsize=(8,6))
        plt.axis('off')
        plt.text(0,0.5,f"‚≠ê Rating do Cliente: {rating}\n\nüìù Recomenda√ß√£o:\n{recomendacoes(rating)}", fontsize=14)
        pdf.savefig()
        plt.close()

    pdf_buffer.seek(0)
    st.download_button(
        label="üì• Baixar PDF",
        data=pdf_buffer,
        file_name=f"Relatorio_{nome_cliente}.pdf",
        mime="application/pdf"
    )
